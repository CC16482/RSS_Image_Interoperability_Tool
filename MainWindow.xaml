<Window x:Class="RSS_Image_Interoperability_Tool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="RSS Image Interoperability Tool"
        Height="900" Width="1600"
        Background="#FF1E1E1E"
        Foreground="#FFF1F1F1"
        AllowDrop="True"
        DragOver="Window_DragOver"
        Drop="Window_Drop">

    <!-- ===== Dark theme brushes ===== -->
    <Window.Resources>
        <SolidColorBrush x:Key="DarkModeBackground" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="DarkModeLevel2Background" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="DarkModeLevel3Background" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="DarkModeForeground" Color="#FFF1F1F1"/>
        <SolidColorBrush x:Key="DarkModeSecondaryForeground" Color="#FFCFCFCF"/>
        <SolidColorBrush x:Key="DarkModeBorderBrush" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="DarkModeFocusBorderBrush" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="DarkModeAccentBrush" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="DarkModeDisabledForegroundBrush" Color="#FFB0B0B0"/>
        <SolidColorBrush x:Key="DarkModeDisabledBackgroundBrush" Color="#FF2A2A2A"/>
        <SolidColorBrush x:Key="DarkModeErrorBrush" Color="#FFCF6679"/>
        <!-- red -->
        <SolidColorBrush x:Key="DarkModeSuccessBrush" Color="#FF2E7D32"/>
        <!-- green -->

        <!-- Buttons -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DarkModeAccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkModeAccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF3EA6FF"/>
                                <Setter Property="BorderBrush" Value="#FF3EA6FF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF005A9E"/>
                                <Setter Property="BorderBrush" Value="#FF005A9E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource DarkModeDisabledBackgroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource DarkModeDisabledBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkModeDisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource DarkModeLevel2Background}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkModeForeground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkModeBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource DarkModeFocusBorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource DarkModeLevel3Background}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Checkbox: force white captions -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <!-- Group headers -->
        <Style TargetType="GroupBox">
            <Setter Property="Background" Value="{StaticResource DarkModeLevel2Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkModeBorderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkModeForeground}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"
                                   Foreground="{StaticResource DarkModeAccentBrush}"
                                   FontSize="14"
                                   FontWeight="Black"
                                   TextOptions.TextFormattingMode="Ideal"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid base -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource DarkModeLevel2Background}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkModeForeground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkModeBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource DarkModeLevel2Background}"/>
            <Setter Property="AlternatingRowBackground" Value="{x:Null}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DarkModeBorderBrush}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DarkModeBorderBrush}"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF3F3F46"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </Window.Resources>

    <Grid Margin="14">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Title / subtitle -->
        <StackPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,10">
            <TextBlock Text="RSS IMAGE INTEROPERABILITY TOOL"
                       FontSize="22"
                       FontWeight="Black"
                       Foreground="White"
                       TextAlignment="Center"/>
            <TextBlock Text="drag &amp; drop CSV or image files/folders anywhere"
                       FontSize="12"
                       Foreground="{StaticResource DarkModeSecondaryForeground}"
                       TextAlignment="Center"
                       Margin="0,2,0,0"/>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- LEFT -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="6"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Stats -->
                <GroupBox Grid.Row="0" Header="PROJECT STATS" Margin="0,0,12,10">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="CSV rows:"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" x:Name="CsvCountText" Text="0"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Images found:"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" x:Name="ImgCountText" Text="0"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Matched filenames:"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" x:Name="MatchCountText" Text="0"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Missing images (in CSV only):"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" x:Name="MissingCountText" Text="0"/>

                        <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,6,0,0"
                                   x:Name="CoordSummaryText"
                                   Foreground="{StaticResource DarkModeSecondaryForeground}"
                                   Text="Coordinate mode: WGS84 (x=lon, y=lat, alt=height) - will export as-is."/>

                        <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,2,0,0"
                                   x:Name="AnglesSummaryText"
                                   Foreground="{StaticResource DarkModeSecondaryForeground}"
                                   Text="Angles: using CSV heading/pitch/roll as-is."/>
                    </Grid>
                </GroupBox>

                <!-- Imports -->
                <GroupBox Grid.Row="1" Header="IMPORTS" Margin="0,0,12,10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- CSV (with Clear) -->
                        <Grid Grid.Row="0" Margin="0,0,0,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="80"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Vertical" Grid.ColumnSpan="3">
                                <TextBlock Text="RealityCapture Cameras CSV" FontWeight="SemiBold" Margin="0,0,0,4" Foreground="White"/>
                            </StackPanel>

                            <TextBox x:Name="CsvPathBox" Grid.Column="0" IsReadOnly="True" Margin="0,0,6,0"/>
                            <Button Grid.Column="1" Content="Import CSV..." Click="BrowseCsv_Click" Margin="0,0,6,0"/>
                            <Button Grid.Column="2" Content="Clear" Click="ClearCsv_Click"/>
                        </Grid>

                        <!-- Images -->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="80"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Vertical" Grid.ColumnSpan="4">
                                <TextBlock Text="Images" FontWeight="SemiBold" Margin="0,0,0,4" Foreground="White"/>
                            </StackPanel>
                            <TextBox x:Name="ImagesPathBox" Grid.Column="0" IsReadOnly="True" Margin="0,0,6,0"/>
                            <Button Grid.Column="1" Content="Add Files..." Click="AddImageFiles_Click" Margin="0,0,6,0"/>
                            <Button Grid.Column="2" Content="Add Folder..." Click="AddImageFolder_Click" Margin="0,0,6,0"/>
                            <Button Grid.Column="3" Content="Clear" Click="ClearImages_Click"/>
                        </Grid>
                    </Grid>
                </GroupBox>

                <!-- Images list -->
                <GroupBox Grid.Row="2" Header="IMAGES" Margin="0,0,12,0">
                    <DataGrid x:Name="ImagesList"
                              AutoGenerateColumns="False"
                              IsReadOnly="True"
                              HeadersVisibility="Column"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              EnableRowVirtualization="True"
                              SelectionUnit="FullRow"
                              SelectionMode="Extended"
                              SelectionChanged="ImagesList_SelectionChanged"
                              PreviewMouseRightButtonUp="ImagesList_PreviewMouseRightButtonUp">
                        <!-- Blue row + white active cells -->
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="{StaticResource DarkModeLevel2Background}"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#223EA6FF"/>
                                        <Setter Property="BorderBrush" Value="#FF3EA6FF"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="White"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Filename" Binding="{Binding Name}" Width="240"/>
                            <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" Width="*"/>
                            <DataGridTextColumn Header="Last Modified" Binding="{Binding Modified}" Width="140"/>
                            <DataGridTextColumn Header="Size (KB)" Binding="{Binding SizeKb}" Width="100"/>
                            <DataGridTextColumn Header="Width" Binding="{Binding Width}" Width="90"/>
                            <DataGridTextColumn Header="Height" Binding="{Binding Height}" Width="90"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>

                <GridSplitter Grid.Row="3" Height="6" HorizontalAlignment="Stretch" Background="#FF3F3F46" />

                <!-- Preview -->
                <GroupBox Grid.Row="4" Header="PREVIEW" Margin="0,10,12,10">
                    <Grid Margin="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer Grid.Column="0"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      Background="{StaticResource DarkModeLevel2Background}">
                            <Image x:Name="PreviewImage"
                                   Stretch="Uniform"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollViewer}}"/>
                        </ScrollViewer>

                        <StackPanel Grid.Column="1" Margin="12,0,0,0" VerticalAlignment="Top">
                            <TextBlock x:Name="PreviewNameText" FontWeight="Bold" Margin="0,0,0,6"/>
                            <TextBlock x:Name="PreviewDimText" Foreground="{StaticResource DarkModeSecondaryForeground}" Margin="0,0,0,10"/>
                            <ItemsControl x:Name="ExifDetailsPanel">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Key}" Width="140" FontWeight="SemiBold"/>
                                            <TextBlock Text="{Binding Value}" Foreground="{StaticResource DarkModeSecondaryForeground}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Output -->
                <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="OutPathBox" Grid.Column="0" IsReadOnly="True" Margin="0,0,6,0"/>
                    <Button Grid.Column="1" Content="Choose Output..." Click="ChooseOutput_Click"/>
                    <Button Grid.Column="3" Content="Export GeoJSON" Click="Export_Click"/>
                </Grid>
            </Grid>

            <!-- RIGHT -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <GroupBox Header="SETTINGS" Margin="0,0,0,10">
                    <StackPanel Margin="10" Orientation="Vertical">

                        <TextBlock Text="COORDINATE MODE" Foreground="{StaticResource DarkModeAccentBrush}" FontWeight="Black" Margin="0,0,0,6"/>
                        <StackPanel Orientation="Vertical" Margin="6,0,0,10">
                            <CheckBox x:Name="ModeWgs84Radio" Content="CSV x=lon (deg), y=lat (deg), alt=height (m) — already WGS84" IsChecked="True"/>
                            <CheckBox x:Name="ModeLocalRadio" Content="CSV x,y,alt are LOCAL ENU (meters) — use Project Origin (lon/lat/height)"/>
                        </StackPanel>

                        <StackPanel x:Name="OriginPanel" IsEnabled="False" Margin="0,0,0,10">
                            <TextBlock Text="PROJECT ORIGIN (USED ONLY FOR LOCAL ENU MODE)" Foreground="{StaticResource DarkModeAccentBrush}" FontWeight="Black" Margin="0,0,0,6"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Margin="0,0,6,0">
                                    <TextBlock Text="Origin Longitude (deg):"/>
                                    <TextBox x:Name="OriginLonBox" Text="153.0"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Margin="0,0,6,0">
                                    <TextBlock Text="Origin Latitude (deg):"/>
                                    <TextBox x:Name="OriginLatBox" Text="-27.0"/>
                                </StackPanel>
                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="Origin Height (m):"/>
                                    <TextBox x:Name="OriginHgtBox" Text="0"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <TextBlock Text="URLS WRITTEN INTO GEOJSON" Foreground="{StaticResource DarkModeAccentBrush}" FontWeight="Black" Margin="0,0,0,6"/>
                        <Grid Margin="0,0,0,6">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Images base URL (or file:/// base)"/>
                            <TextBox   Grid.Row="0" Grid.Column="1" x:Name="ImagesBaseUrlBox" Text="/images/"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Thumbnails base URL"/>
                            <TextBox   Grid.Row="1" Grid.Column="1" x:Name="ThumbsBaseUrlBox" Text="/thumbnails/"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="Pin icon (relative URL)"/>
                            <TextBox   Grid.Row="2" Grid.Column="1" x:Name="PinIconUrlBox" Text="/icons/camera-pin.png"/>

                            <CheckBox Grid.Row="3" Grid.ColumnSpan="2" Margin="0,6,0,0"
                                      x:Name="UseFileSchemeCheck"
                                      IsChecked="True"
                                      Content="Use file:/// URLs from imported image locations (overrides Images base URL when available)"/>
                        </Grid>

                        <TextBlock Text="EXPORT OPTIONS" Foreground="{StaticResource DarkModeAccentBrush}" FontWeight="Black" Margin="0,6,0,6"/>
                        <StackPanel Orientation="Vertical" Margin="6,0,0,6">
                            <CheckBox x:Name="OnlyMatchedCheck" Content="Export only rows that have a matching image" IsChecked="True"/>
                            <CheckBox x:Name="IncludeExifCheck" Content="Include EXIF &amp; file properties in GeoJSON" IsChecked="True"/>
                            <CheckBox x:Name="IncludeHprCheck"
                                      Content="Include heading/pitch/roll (HPR) in GeoJSON"
                                      IsChecked="True"
                                      ToolTip="When checked: If OPK + convert is on, exports Cesium HPR (radians, east-radians). Otherwise, exports CSV HPR as-is."/>
                            <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                <TextBlock VerticalAlignment="Center" Text="CSV HPR convention" Margin="0,0,8,0"/>
                                <ComboBox x:Name="CsvHprConventionCombo" Width="260" SelectedIndex="0" SelectedValuePath="Tag"
                                          ToolTip="Choose how to tag CSV HPR when not converting OPK.">
                                    <ComboBoxItem Content="North (deg from North, clockwise)" Tag="north-degrees"/>
                                    <ComboBoxItem Content="East (deg from East, counter‑clockwise)" Tag="east-degrees"/>
                                </ComboBox>
                            </StackPanel>
                            <TextBlock x:Name="CsvHprConventionHint"
                                       Margin="0,2,0,0"
                                       Foreground="{StaticResource DarkModeSecondaryForeground}"
                                       Text="Used to tag CSV HPR as north-degrees or east-degrees."/>
                            <CheckBox x:Name="ConvertOpkCheck"
                                      Content="Convert RealityCapture omega/phi/kappa to Cesium heading/pitch/roll (radians)"
                                      IsChecked="True"
                                      ToolTip="When CSV headers are omega/phi/kappa, convert to Cesium HPR in radians for GeoJSON. Uncheck to export raw CSV angles as-is."/>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Margin="0,0,0,4">
                            <TextBlock Text="Output filename (suggested):"/>
                            <TextBox x:Name="SingleFileNameBox" Text="cameras.geojson"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <!-- CSV rows -->
                <GroupBox Grid.Row="1" Header="CSV ROWS (UNMATCHED HIGHLIGHTED)">
                    <DataGrid x:Name="CsvRowsGrid"
                              AutoGenerateColumns="True"
                              IsReadOnly="True"
                              HeadersVisibility="Column"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              EnableRowVirtualization="True"
                              SelectionUnit="FullRow"
                              SelectionMode="Extended"
                              PreviewMouseRightButtonUp="CsvRowsGrid_PreviewMouseRightButtonUp">

                        <!-- Row colors -->
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="{StaticResource DarkModeLevel2Background}"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasImage}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource DarkModeSuccessBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasImage}" Value="False">
                                        <Setter Property="Background" Value="{StaticResource DarkModeErrorBrush}"/>
                                    </DataTrigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3EA6FF"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <!-- White active cell -->
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="White"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </Grid>
    </Grid>
</Window>
